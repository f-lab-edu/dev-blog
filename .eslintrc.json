{
  "env": {
    "browser": true,
    "node": true,
    "commonjs": true,
    "es2022": true,
    "es2021": true,
    "jasmine": true,
    "jest": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "extends": [
    "airbnb-base",
    "airbnb",
    "airbnb/hooks",
    "plugin:react/recommended",
    "plugin:jsx-a11y/recommended",
    "eslint-config-prettier",
    "next/core-web-vitals",
    "next",
    "prettier"
  ],
  "globals": {
    "_": true,
    "NodeJS": true,
    "navigation": "readonly",
    "globalThis": false
  },

  "plugins": ["@typescript-eslint", "import", "html"],
  "settings": {
    "react": {
      // Tells eslint-plugin-react to automatically detect the version of React to use.
      "version": "detect"
    },
    "import/extensions": [".js", ".jsx", ".ts", ".tsx"],
    "import/resolver": {
      "node": {
        "paths": ["src"],
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      },
      "typescript": {
        "project": "."
      }
    }
  },
  "rules": {
    "no-console": "warn",
    "arrow-body-style": "off",
    "no-plusplus": "off",
    "react/display-name": "off",
    "react/function-component-definition": ["warn", { "namedComponents": "arrow-function" }],
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-filename-extension": ["error", { "extensions": [".js", ".jsx", ".ts", ".tsx"] }],
    "react/jsx-props-no-spreading": "off",
    "react/require-default-props": "off",
    "react/jsx-wrap-multilines": "off",
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "import/prefer-default-export": "off",
    "import/no-unresolved": "off",
    "no-restricted-exports": ["error", { "restrictDefaultExports": { "defaultFrom": false } }],
    "import/order": [
      "error",
      {
        "pathGroups": [
          {
            "pattern": "@/lib/**",
            "group": "external"
          },
          {
            "pattern": "{types/*,@/types*,./types}",
            "group": "type"
          },
          {
            "pattern": "{hooks,@/hooks/**/*,./hooks/**,./use**,../use**,../../use**,../../../use**,,../../hooks/**,./_hooks/**,../../../_hooks/**}",
            "group": "internal"
          },
          {
            "pattern": "{utils/**/*,./utils,../utils,../../utils,../../../utils}",
            "group": "type"
          },
          {
            "pattern": "{@/constants/*,./constants}",
            "group": "type"
          },
          {
            "pattern": "{states/**/*,./states*,./**/states*,../states*,../../states*,../../../states*,,../../../../states*,**/**/**/states*}",
            "group": "type"
          },
          {
            "pattern": "@/services/**",
            "group": "type"
          },
          {
            "pattern": "{./helpers,./data,./config,./defaults,../../../defaults}",
            "group": "type"
          },
          {
            "pattern": "{components,components/_common/**,@/components,@/components/**,svgs,@/assets/**/*,@/app/**,routes/**,public/**}",
            "group": "index"
          },
          {
            "pattern": "{styles,./*.scss,../*.scss,../*.module.scss}",
            "group": "index"
          }
        ],
        "groups": [
          ["external", "builtin"],
          ["type", "internal", "object"],
          ["parent", "sibling", "index"]
        ],
        "newlines-between": "always"
      }
    ],
    "import/no-anonymous-default-export": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": ["**/*.test.tsx", "**/*.stories.*", "**/.storybook/**/*.*", "setupTests.ts"],
        "peerDependencies": true
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "@typescript-eslint/camelcase": "off",
    "prefer-destructuring": ["error", { "object": true, "array": false }],
    "lines-between-class-members": "off",
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/label-has-associated-control": [
      "error",
      {
        "labelComponents": ["label"],
        "labelAttributes": ["htmlFor"],
        "controlComponents": ["input"]
      }
    ],
    "vars-on-top": "off",
    "no-underscore-dangle": "off", // var _foo;
    "comma-dangle": "off",
    "func-names": "off", // setTimeout(function () {}, 0);
    "prefer-template": "off",
    "no-nested-ternary": "off",
    "max-classes-per-file": "off",
    "consistent-return": "off",
    "no-restricted-syntax": ["off", "ForOfStatement"], // disallow specified syntax(ex. WithStatement)
    "prefer-arrow-callback": "error", // Require using arrow functions for callbacks
    "require-await": "error",
    "arrow-parens": ["error", "as-needed"], // a => {}
    "no-param-reassign": ["error", { "props": false }],
    "no-unused-expressions": [
      "error",
      {
        "allowTernary": true, // a || b
        "allowShortCircuit": true, // a ? b : 0
        "allowTaggedTemplates": true
      }
    ],
    "max-len": [
      "error",
      {
        "code": 120,
        "ignoreComments": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true
      }
    ] // prettier의 printWidth 옵션 대신 사용
  }
}
